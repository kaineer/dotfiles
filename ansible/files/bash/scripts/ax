#!/usr/bin/env bash

## bootstrap
BIN=$(readlink -f $0)
DIR=$(dirname $BIN)
DF_DIR=$DIR/../../../..
EDITOR=${EDITOR:-vi}
[ -x $HOME/bin/nvim ] && EDITOR=nvim
## bootstrap

usage() {
  echo "## ansible config runner"
  echo ""
  echo " $ ax ce              # edit ansible.cfg"
  echo " $ ax se [scriptname] # edit script in bash/script"
  echo " $ ax sel             # edit list of scripts to install"
  echo " $ ax sync            # sync repo with remote on github"
  echo " $ ax                 # run dotfiles.sh to update config"
}

edit_ansible_config() {
  $EDITOR $DIR/../../../ansible.cfg
}

edit_script() {
  $EDITOR $DIR/$1
}

edit_script_list() {
  $EDITOR $DF_DIR/ansible/tasks/cli/scripts.yml
}

apply_dotfiles() {
  cd $DF_DIR
  ./bin/dotfiles.sh
}

edit_debian_vars() {
  cd $DF_DIR
  $EDITOR ./ansible/vars/
}

nothing_to_commit() {
  git status . | grep "nothing to commit" | wc -l
}

export_secrets() {
  DF_TARGET=$1
  [ ! -d $DF_TARGET ] && mkdir -p $DF_TARGET
  if [ -d $DF_TARGET ]; then
    echo " [DEBUG] Exporing keys to $DF_TARGET..."
    # Export gpg private key
    #
    gpg --output $DF_TARGET/private.pgp --armor --export-secret-key
  fi
}

import_secrets() {
  DF_TARGET=$1
  if [ -f $DF_TARGET/private.pgp ]; then
    echo " [DEBUG] Importing keys from $DF_TARGET..."
    gpg --import $DF_TARGET/private.pgp
  fi
}

case "$1" in
  "ce")
    edit_ansible_config
    ;;
  "v"|"vars")
    edit_debian_vars
    ;;
  "se")
    shift
    edit_script $1
    ;;
  "sel")
    edit_script_list
    ;;
  "export")
    shift
    export_secrets $@
    ;;
  "import")
    shift
    import_secrets $@
    ;;
  "sync")
    cd $DF_DIR
    DF_NOTHING_TO_COMMIT=$(nothing_to_commit)
    if [[ "$DF_NOTHING_TO_COMMIT" == "0" ]]; then
      git add .
      git commit -m "Sync on $(date +'%Y.%m.%d')"
    fi
    git pull origin master
    git push origin master
    ;;
  "h"|"help")
    usage
    ;;
  "")
    apply_dotfiles
    ;;
esac
