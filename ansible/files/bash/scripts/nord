#!/usr/bin/python3
#  _____  ___
# /__   \/ __\  Tangerine Cat, kaineer@gmail.com
#   / /\/ /
#  / / / /___   github: https://github.com/kaineer
#  \/  \____/   twitter: https://twitter.com/kaineer
#

from sys import argv

hex_colors = {
    "background": "#3b4252",
    "current_line": "#434c5e",
    "selection": "#4c566a",
    "foreground": "#eceff4",
    "comment": "#8fbcbb",
    "red": "#bf616a",
    "orange": "#d08770",
    "yellow": "#ebcb8b",
    "green": "#a3be8c",
    "aqua": "#88c0d0",
    "blue": "#5e81ac",
    "purple": "#b48ead"
}

def parse_hex_color(hcs):
    return [
        int(hcs[1:3], 16),
        int(hcs[3:5], 16),
        int(hcs[5:7], 16)
    ]

def show_all(args):
    f = None
    if len(args) > 0:
        f = args[0]
    for k in hex_colors:
        if f is None or f in k:
            [r, g, b] = parse_hex_color(hex_colors[k])
            print(f"{k:>12}: {ansi_color(r, g, b)}{hex_colors[k]}{ansi_reset()}")

def find_key(key):
    color = next(x for x in hex_colors.keys() if key in x)
    return color

def list_keys():
    for key in hex_colors:
        print(key)

def ansi_color(r, g, b):
    return f"\x1b[38;2;{r};{g};{b}m"

def ansi_reset():
    return "\x1b[0m"

def display_color_dec(rgb):
    [r, g, b] = parse_hex_color(rgb)
    print(r, g, b)

def display_color_ansi(rgb):
    [r, g, b] = parse_hex_color(rgb)
    print(ansi_color(r, g, b), rgb, ansi_reset(), sep="")

def display_color_bare(rgb):
    print(rgb)

def display_color_highlighted(rgb):
    [r, g, b] = parse_hex_color(rgb)
    print(ansi_color(r, g, b), rgb, ansi_reset(), sep="")

def display_color(args):
    color = args[0]
    opt = None
    if len(args) > 1:
        opt = args[1]
    found_color = find_key(color)
    if found_color:
        rgb = hex_colors[found_color]
        if opt == "dec":
            display_color_dec(rgb)
        elif opt == "ansi":
            display_color_ansi(rgb)
        elif opt == "-c":
            display_color_bare(rgb)
        else:
            display_color_highlighted(rgb)

if __name__ == "__main__":
    args = argv[1:]
    if len(args) == 0 or args[0] == "ls":
        show_all(args[1:])
    elif args[0] == "keys":
        list_keys()
    else:
        display_color(args)
